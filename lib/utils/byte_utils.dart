class ByteUtils {
  /// 计算产生校验码
  ///
  /// @param data 需要校验的数据
  /// @return 校验码
  static List<int> crc16(List<int> data) {
    int len = data.length;
    if (len > 0) {
      int crc = 0xFFFF;
      for (int aData in data) {
        crc = crc ^ (aData);
        for (int j = 0; j < 8; j++) {
          crc = (crc & 1) != 0 ? (crc >> 1) ^ 0xA001 : crc >> 1;
        }
      }
      int hi = (crc & 0xFF00) >> 8; //高位置
      int lo = crc & 0x00FF; //低位置
      return [hi, lo];
    }
    return [0, 0];
  }

  static String? getMimeType(String fileName) {
    fileName = fileName.toLowerCase();
    Map<String, String> typesMap = new Map<String, String>();
    typesMap["323"] = "text/h323";
    typesMap["3g2"] = "video/3gpp2";
    typesMap["3gp"] = "video/3gpp";
    typesMap["3gp2"] = "video/3gpp2";
    typesMap["3gpp"] = "video/3gpp";
    typesMap["7z"] = "application/x-7z-compressed";
    typesMap["aa"] = "audio/audible";
    typesMap["aac"] = "audio/aac";
    typesMap["aaf"] = "application/octet-stream";
    typesMap["aax"] = "audio/vnd.audible.aax";
    typesMap["ac3"] = "audio/ac3";
    typesMap["aca"] = "application/octet-stream";
    typesMap["accda"] = "application/msaccess.addin";
    typesMap["accdb"] = "application/msaccess";
    typesMap["accdc"] = "application/msaccess.cab";
    typesMap["accde"] = "application/msaccess";
    typesMap["accdr"] = "application/msaccess.runtime";
    typesMap["accdt"] = "application/msaccess";
    typesMap["accdw"] = "application/msaccess.webapplication";
    typesMap["accft"] = "application/msaccess.ftemplate";
    typesMap["acx"] = "application/internet-property-stream";
    typesMap["addin"] = "text/xml";
    typesMap["ade"] = "application/msaccess";
    typesMap["adobebridge"] = "application/x-bridge-url";
    typesMap["adp"] = "application/msaccess";
    typesMap["adt"] = "audio/vnd.dlna.adts";
    typesMap["adts"] = "audio/aac";
    typesMap["afm"] = "application/octet-stream";
    typesMap["ai"] = "application/postscript";
    typesMap["aif"] = "audio/aiff";
    typesMap["aifc"] = "audio/aiff";
    typesMap["aiff"] = "audio/aiff";
    typesMap["air"] =
        "application/vnd.adobe.air-application-installer-package+zip";
    typesMap["amc"] = "application/mpeg";
    typesMap["anx"] = "application/annodex";
    typesMap["apk"] = "application/vnd.android.package-archive";
    typesMap["application"] = "application/x-ms-application";
    typesMap["art"] = "image/x-jg";
    typesMap["asa"] = "application/xml";
    typesMap["asax"] = "application/xml";
    typesMap["ascx"] = "application/xml";
    typesMap["asd"] = "application/octet-stream";
    typesMap["asf"] = "video/x-ms-asf";
    typesMap["ashx"] = "application/xml";
    typesMap["asi"] = "application/octet-stream";
    typesMap["asm"] = "text/plain";
    typesMap["asmx"] = "application/xml";
    typesMap["aspx"] = "application/xml";
    typesMap["asr"] = "video/x-ms-asf";
    typesMap["asx"] = "video/x-ms-asf";
    typesMap["atom"] = "application/atom+xml";
    typesMap["au"] = "audio/basic";
    typesMap["avi"] = "video/x-msvideo";
    typesMap["axa"] = "audio/annodex";
    typesMap["axs"] = "application/olescript";
    typesMap["axv"] = "video/annodex";
    typesMap["bas"] = "text/plain";
    typesMap["bcpio"] = "application/x-bcpio";
    typesMap["bin"] = "application/octet-stream";
    typesMap["bmp"] = "image/bmp";
    typesMap["c"] = "text/plain";
    typesMap["cab"] = "application/octet-stream";
    typesMap["caf"] = "audio/x-caf";
    typesMap["calx"] = "application/vnd.ms-office.calx";
    typesMap["cat"] = "application/vnd.ms-pki.seccat";
    typesMap["cc"] = "text/plain";
    typesMap["cd"] = "text/plain";
    typesMap["cdda"] = "audio/aiff";
    typesMap["cdf"] = "application/x-cdf";
    typesMap["cer"] = "application/x-x509-ca-cert";
    typesMap["cfg"] = "text/plain";
    typesMap["chm"] = "application/octet-stream";
    typesMap["class"] = "application/x-java-applet";
    typesMap["clp"] = "application/x-msclip";
    typesMap["cmd"] = "text/plain";
    typesMap["cmx"] = "image/x-cmx";
    typesMap["cnf"] = "text/plain";
    typesMap["cod"] = "image/cis-cod";
    typesMap["config"] = "application/xml";
    typesMap["contact"] = "text/x-ms-contact";
    typesMap["coverage"] = "application/xml";
    typesMap["cpio"] = "application/x-cpio";
    typesMap["cpp"] = "text/plain";
    typesMap["crd"] = "application/x-mscardfile";
    typesMap["crl"] = "application/pkix-crl";
    typesMap["crt"] = "application/x-x509-ca-cert";
    typesMap["cs"] = "text/plain";
    typesMap["csdproj"] = "text/plain";
    typesMap["csh"] = "application/x-csh";
    typesMap["csproj"] = "text/plain";
    typesMap["css"] = "text/css";
    typesMap["csv"] = "text/csv";
    typesMap["cur"] = "application/octet-stream";
    typesMap["cxx"] = "text/plain";
    typesMap["dat"] = "application/octet-stream";
    typesMap["datasource"] = "application/xml";
    typesMap["dbproj"] = "text/plain";
    typesMap["dcr"] = "application/x-director";
    typesMap["def"] = "text/plain";
    typesMap["deploy"] = "application/octet-stream";
    typesMap["der"] = "application/x-x509-ca-cert";
    typesMap["dgml"] = "application/xml";
    typesMap["dib"] = "image/bmp";
    typesMap["dif"] = "video/x-dv";
    typesMap["dir"] = "application/x-director";
    typesMap["disco"] = "text/xml";
    typesMap["divx"] = "video/divx";
    typesMap["dll"] = "application/x-msdownload";
    typesMap["dll.config"] = "text/xml";
    typesMap["dlm"] = "text/dlm";
    typesMap["dng"] = "image/x-adobe-dng";
    typesMap["doc"] = "application/msword";
    typesMap["docm"] = "application/vnd.ms-word.document.macroEnabled.12";
    typesMap["docx"] =
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
    typesMap["dot"] = "application/msword";
    typesMap["dotm"] = "application/vnd.ms-word.template.macroEnabled.12";
    typesMap["dotx"] =
        "application/vnd.openxmlformats-officedocument.wordprocessingml.template";
    typesMap["dsp"] = "application/octet-stream";
    typesMap["dsw"] = "text/plain";
    typesMap["dtd"] = "text/xml";
    typesMap["dtsconfig"] = "text/xml";
    typesMap["dv"] = "video/x-dv";
    typesMap["dvi"] = "application/x-dvi";
    typesMap["dwf"] = "drawing/x-dwf";
    typesMap["dwp"] = "application/octet-stream";
    typesMap["dxr"] = "application/x-director";
    typesMap["eml"] = "message/rfc822";
    typesMap["emz"] = "application/octet-stream";
    typesMap["eot"] = "application/vnd.ms-fontobject";
    typesMap["eps"] = "application/postscript";
    typesMap["etl"] = "application/etl";
    typesMap["etx"] = "text/x-setext";
    typesMap["evy"] = "application/envoy";
    typesMap["exe"] = "application/octet-stream";
    typesMap["exe.config"] = "text/xml";
    typesMap["fdf"] = "application/vnd.fdf";
    typesMap["fif"] = "application/fractals";
    typesMap["filters"] = "application/xml";
    typesMap["fla"] = "application/octet-stream";
    typesMap["flac"] = "audio/flac";
    typesMap["flr"] = "x-world/x-vrml";
    typesMap["flv"] = "video/x-flv";
    typesMap["fsscript"] = "application/fsharp-script";
    typesMap["fsx"] = "application/fsharp-script";
    typesMap["generictest"] = "application/xml";
    typesMap["gif"] = "image/gif";
    typesMap["group"] = "text/x-ms-group";
    typesMap["gsm"] = "audio/x-gsm";
    typesMap["gtar"] = "application/x-gtar";
    typesMap["gz"] = "application/x-gzip";
    typesMap["h"] = "text/plain";
    typesMap["hdf"] = "application/x-hdf";
    typesMap["hdml"] = "text/x-hdml";
    typesMap["hhc"] = "application/x-oleobject";
    typesMap["hhk"] = "application/octet-stream";
    typesMap["hhp"] = "application/octet-stream";
    typesMap["hlp"] = "application/winhlp";
    typesMap["hpp"] = "text/plain";
    typesMap["hqx"] = "application/mac-binhex40";
    typesMap["hta"] = "application/hta";
    typesMap["htc"] = "text/x-component";
    typesMap["htm"] = "text/html";
    typesMap["html"] = "text/html";
    typesMap["htt"] = "text/webviewhtml";
    typesMap["hxa"] = "application/xml";
    typesMap["hxc"] = "application/xml";
    typesMap["hxd"] = "application/octet-stream";
    typesMap["hxe"] = "application/xml";
    typesMap["hxf"] = "application/xml";
    typesMap["hxh"] = "application/octet-stream";
    typesMap["hxi"] = "application/octet-stream";
    typesMap["hxk"] = "application/xml";
    typesMap["hxq"] = "application/octet-stream";
    typesMap["hxr"] = "application/octet-stream";
    typesMap["hxs"] = "application/octet-stream";
    typesMap["hxt"] = "text/html";
    typesMap["hxv"] = "application/xml";
    typesMap["hxw"] = "application/octet-stream";
    typesMap["hxx"] = "text/plain";
    typesMap["i"] = "text/plain";
    typesMap["ico"] = "image/x-icon";
    typesMap["ics"] = "text/calendar";
    typesMap["idl"] = "text/plain";
    typesMap["ief"] = "image/ief";
    typesMap["iii"] = "application/x-iphone";
    typesMap["inc"] = "text/plain";
    typesMap["inf"] = "application/octet-stream";
    typesMap["ini"] = "text/plain";
    typesMap["inl"] = "text/plain";
    typesMap["ins"] = "application/x-internet-signup";
    typesMap["ipa"] = "application/x-itunes-ipa";
    typesMap["ipg"] = "application/x-itunes-ipg";
    typesMap["ipproj"] = "text/plain";
    typesMap["ipsw"] = "application/x-itunes-ipsw";
    typesMap["iqy"] = "text/x-ms-iqy";
    typesMap["isp"] = "application/x-internet-signup";
    typesMap["ite"] = "application/x-itunes-ite";
    typesMap["itlp"] = "application/x-itunes-itlp";
    typesMap["itms"] = "application/x-itunes-itms";
    typesMap["itpc"] = "application/x-itunes-itpc";
    typesMap["ivf"] = "video/x-ivf";
    typesMap["jar"] = "application/java-archive";
    typesMap["java"] = "application/octet-stream";
    typesMap["jck"] = "application/liquidmotion";
    typesMap["jcz"] = "application/liquidmotion";
    typesMap["jfif"] = "image/pjpeg";
    typesMap["jnlp"] = "application/x-java-jnlp-file";
    typesMap["jpb"] = "application/octet-stream";
    typesMap["jpe"] = "image/jpeg";
    typesMap["jpeg"] = "image/jpeg";
    typesMap["jpg"] = "image/jpeg";
    typesMap["js"] = "application/javascript";
    typesMap["json"] = "application/json";
    typesMap["jsx"] = "text/jscript";
    typesMap["jsxbin"] = "text/plain";
    typesMap["latex"] = "application/x-latex";
    typesMap["library-ms"] = "application/windows-library+xml";
    typesMap["lit"] = "application/x-ms-reader";
    typesMap["loadtest"] = "application/xml";
    typesMap["lpk"] = "application/octet-stream";
    typesMap["lsf"] = "video/x-la-asf";
    typesMap["lst"] = "text/plain";
    typesMap["lsx"] = "video/x-la-asf";
    typesMap["lzh"] = "application/octet-stream";
    typesMap["m13"] = "application/x-msmediaview";
    typesMap["m14"] = "application/x-msmediaview";
    typesMap["m1v"] = "video/mpeg";
    typesMap["m2t"] = "video/vnd.dlna.mpeg-tts";
    typesMap["m2ts"] = "video/vnd.dlna.mpeg-tts";
    typesMap["m2v"] = "video/mpeg";
    typesMap["m3u"] = "audio/x-mpegurl";
    typesMap["m3u8"] = "audio/x-mpegurl";
    typesMap["m4a"] = "audio/m4a";
    typesMap["m4b"] = "audio/m4b";
    typesMap["m4p"] = "audio/m4p";
    typesMap["m4r"] = "audio/x-m4r";
    typesMap["m4v"] = "video/x-m4v";
    typesMap["mac"] = "image/x-macpaint";
    typesMap["mak"] = "text/plain";
    typesMap["man"] = "application/x-troff-man";
    typesMap["manifest"] = "application/x-ms-manifest";
    typesMap["map"] = "text/plain";
    typesMap["master"] = "application/xml";
    typesMap["mda"] = "application/msaccess";
    typesMap["mdb"] = "application/x-msaccess";
    typesMap["mde"] = "application/msaccess";
    typesMap["mdp"] = "application/octet-stream";
    typesMap["me"] = "application/x-troff-me";
    typesMap["mfp"] = "application/x-shockwave-flash";
    typesMap["mht"] = "message/rfc822";
    typesMap["mhtml"] = "message/rfc822";
    typesMap["mid"] = "audio/mid";
    typesMap["midi"] = "audio/mid";
    typesMap["mix"] = "application/octet-stream";
    typesMap["mk"] = "text/plain";
    typesMap["mkv"] = "video/x-matroska";
    typesMap["mmf"] = "application/x-smaf";
    typesMap["mno"] = "text/xml";
    typesMap["mny"] = "application/x-msmoney";
    typesMap["mod"] = "video/mpeg";
    typesMap["mov"] = "video/quicktime";
    typesMap["movie"] = "video/x-sgi-movie";
    typesMap["mp2"] = "video/mpeg";
    typesMap["mp2v"] = "video/mpeg";
    typesMap["mp3"] = "audio/mpeg";
    typesMap["mp4"] = "video/mp4";
    typesMap["mp4v"] = "video/mp4";
    typesMap["mpa"] = "video/mpeg";
    typesMap["mpe"] = "video/mpeg";
    typesMap["mpeg"] = "video/mpeg";
    typesMap["mpf"] = "application/vnd.ms-mediapackage";
    typesMap["mpg"] = "video/mpeg";
    typesMap["mpp"] = "application/vnd.ms-project";
    typesMap["mpv2"] = "video/mpeg";
    typesMap["mqv"] = "video/quicktime";
    typesMap["ms"] = "application/x-troff-ms";
    typesMap["msi"] = "application/octet-stream";
    typesMap["mso"] = "application/octet-stream";
    typesMap["mts"] = "video/vnd.dlna.mpeg-tts";
    typesMap["mtx"] = "application/xml";
    typesMap["mvb"] = "application/x-msmediaview";
    typesMap["mvc"] = "application/x-miva-compiled";
    typesMap["mxp"] = "application/x-mmxp";
    typesMap["nc"] = "application/x-netcdf";
    typesMap["nsc"] = "video/x-ms-asf";
    typesMap["nws"] = "message/rfc822";
    typesMap["ocx"] = "application/octet-stream";
    typesMap["oda"] = "application/oda";
    typesMap["odb"] = "application/vnd.oasis.opendocument.database";
    typesMap["odc"] = "application/vnd.oasis.opendocument.chart";
    typesMap["odf"] = "application/vnd.oasis.opendocument.formula";
    typesMap["odg"] = "application/vnd.oasis.opendocument.graphics";
    typesMap["odh"] = "text/plain";
    typesMap["odi"] = "application/vnd.oasis.opendocument.image";
    typesMap["odl"] = "text/plain";
    typesMap["odm"] = "application/vnd.oasis.opendocument.text-master";
    typesMap["odp"] = "application/vnd.oasis.opendocument.presentation";
    typesMap["ods"] = "application/vnd.oasis.opendocument.spreadsheet";
    typesMap["odt"] = "application/vnd.oasis.opendocument.text";
    typesMap["oga"] = "audio/ogg";
    typesMap["ogg"] = "audio/ogg";
    typesMap["ogv"] = "video/ogg";
    typesMap["ogx"] = "application/ogg";
    typesMap["one"] = "application/onenote";
    typesMap["onea"] = "application/onenote";
    typesMap["onepkg"] = "application/onenote";
    typesMap["onetmp"] = "application/onenote";
    typesMap["onetoc"] = "application/onenote";
    typesMap["onetoc2"] = "application/onenote";
    typesMap["opus"] = "audio/ogg";
    typesMap["orderedtest"] = "application/xml";
    typesMap["osdx"] = "application/opensearchdescription+xml";
    typesMap["otf"] = "application/font-sfnt";
    typesMap["otg"] = "application/vnd.oasis.opendocument.graphics-template";
    typesMap["oth"] = "application/vnd.oasis.opendocument.text-web";
    typesMap["otp"] =
        "application/vnd.oasis.opendocument.presentation-template";
    typesMap["ots"] = "application/vnd.oasis.opendocument.spreadsheet-template";
    typesMap["ott"] = "application/vnd.oasis.opendocument.text-template";
    typesMap["oxt"] = "application/vnd.openofficeorg.extension";
    typesMap["p10"] = "application/pkcs10";
    typesMap["p12"] = "application/x-pkcs12";
    typesMap["p7b"] = "application/x-pkcs7-certificates";
    typesMap["p7c"] = "application/pkcs7-mime";
    typesMap["p7m"] = "application/pkcs7-mime";
    typesMap["p7r"] = "application/x-pkcs7-certreqresp";
    typesMap["p7s"] = "application/pkcs7-signature";
    typesMap["pbm"] = "image/x-portable-bitmap";
    typesMap["pcast"] = "application/x-podcast";
    typesMap["pct"] = "image/pict";
    typesMap["pcx"] = "application/octet-stream";
    typesMap["pcz"] = "application/octet-stream";
    typesMap["pdf"] = "application/pdf";
    typesMap["pfb"] = "application/octet-stream";
    typesMap["pfm"] = "application/octet-stream";
    typesMap["pfx"] = "application/x-pkcs12";
    typesMap["pgm"] = "image/x-portable-graymap";
    typesMap["php"] = "text/plain";
    typesMap["pic"] = "image/pict";
    typesMap["pict"] = "image/pict";
    typesMap["pkgdef"] = "text/plain";
    typesMap["pkgundef"] = "text/plain";
    typesMap["pko"] = "application/vnd.ms-pki.pko";
    typesMap["pls"] = "audio/scpls";
    typesMap["pma"] = "application/x-perfmon";
    typesMap["pmc"] = "application/x-perfmon";
    typesMap["pml"] = "application/x-perfmon";
    typesMap["pmr"] = "application/x-perfmon";
    typesMap["pmw"] = "application/x-perfmon";
    typesMap["png"] = "image/png";
    typesMap["pnm"] = "image/x-portable-anymap";
    typesMap["pnt"] = "image/x-macpaint";
    typesMap["pntg"] = "image/x-macpaint";
    typesMap["pnz"] = "image/png";
    typesMap["pot"] = "application/vnd.ms-powerpoint";
    typesMap["potm"] = "application/vnd.ms-powerpoint.template.macroEnabled.12";
    typesMap["potx"] =
        "application/vnd.openxmlformats-officedocument.presentationml.template";
    typesMap["ppa"] = "application/vnd.ms-powerpoint";
    typesMap["ppam"] = "application/vnd.ms-powerpoint.addin.macroEnabled.12";
    typesMap["ppm"] = "image/x-portable-pixmap";
    typesMap["pps"] = "application/vnd.ms-powerpoint";
    typesMap["ppsm"] =
        "application/vnd.ms-powerpoint.slideshow.macroEnabled.12";
    typesMap["ppsx"] =
        "application/vnd.openxmlformats-officedocument.presentationml.slideshow";
    typesMap["ppt"] = "application/vnd.ms-powerpoint";
    typesMap["pptm"] =
        "application/vnd.ms-powerpoint.presentation.macroEnabled.12";
    typesMap["pptx"] =
        "application/vnd.openxmlformats-officedocument.presentationml.presentation";
    typesMap["prf"] = "application/pics-rules";
    typesMap["prm"] = "application/octet-stream";
    typesMap["prx"] = "application/octet-stream";
    typesMap["ps"] = "application/postscript";
    typesMap["psc1"] = "application/PowerShell";
    typesMap["psd"] = "application/octet-stream";
    typesMap["psess"] = "application/xml";
    typesMap["psm"] = "application/octet-stream";
    typesMap["psp"] = "application/octet-stream";
    typesMap["pub"] = "application/x-mspublisher";
    typesMap["pwz"] = "application/vnd.ms-powerpoint";
    typesMap["py"] = "text/plain";
    typesMap["qht"] = "text/x-html-insertion";
    typesMap["qhtm"] = "text/x-html-insertion";
    typesMap["qt"] = "video/quicktime";
    typesMap["qti"] = "image/x-quicktime";
    typesMap["qtif"] = "image/x-quicktime";
    typesMap["qtl"] = "application/x-quicktimeplayer";
    typesMap["qxd"] = "application/octet-stream";
    typesMap["ra"] = "audio/x-pn-realaudio";
    typesMap["ram"] = "audio/x-pn-realaudio";
    typesMap["rar"] = "application/x-rar-compressed";
    typesMap["ras"] = "image/x-cmu-raster";
    typesMap["rat"] = "application/rat-file";
    typesMap["rb"] = "text/plain";
    typesMap["rc"] = "text/plain";
    typesMap["rc2"] = "text/plain";
    typesMap["rct"] = "text/plain";
    typesMap["rdlc"] = "application/xml";
    typesMap["reg"] = "text/plain";
    typesMap["resx"] = "application/xml";
    typesMap["rf"] = "image/vnd.rn-realflash";
    typesMap["rgb"] = "image/x-rgb";
    typesMap["rgs"] = "text/plain";
    typesMap["rm"] = "application/vnd.rn-realmedia";
    typesMap["rmi"] = "audio/mid";
    typesMap["rmp"] = "application/vnd.rn-rn_music_package";
    typesMap["roff"] = "application/x-troff";
    typesMap["rpm"] = "audio/x-pn-realaudio-plugin";
    typesMap["rqy"] = "text/x-ms-rqy";
    typesMap["rtf"] = "application/rtf";
    typesMap["rtx"] = "text/richtext";
    typesMap["ruleset"] = "application/xml";
    typesMap["s"] = "text/plain";
    typesMap["safariextz"] = "application/x-safari-safariextz";
    typesMap["scd"] = "application/x-msschedule";
    typesMap["scr"] = "text/plain";
    typesMap["sct"] = "text/scriptlet";
    typesMap["sd2"] = "audio/x-sd2";
    typesMap["sdp"] = "application/sdp";
    typesMap["sea"] = "application/octet-stream";
    typesMap["searchConnector-ms"] = "application/windows-search-connector+xml";
    typesMap["setpay"] = "application/set-payment-initiation";
    typesMap["setreg"] = "application/set-registration-initiation";
    typesMap["settings"] = "application/xml";
    typesMap["sgimb"] = "application/x-sgimb";
    typesMap["sgml"] = "text/sgml";
    typesMap["sh"] = "application/x-sh";
    typesMap["shar"] = "application/x-shar";
    typesMap["shtml"] = "text/html";
    typesMap["sit"] = "application/x-stuffit";
    typesMap["sitemap"] = "application/xml";
    typesMap["skin"] = "application/xml";
    typesMap["sldm"] = "application/vnd.ms-powerpoint.slide.macroEnabled.12";
    typesMap["sldx"] =
        "application/vnd.openxmlformats-officedocument.presentationml.slide";
    typesMap["slk"] = "application/vnd.ms-excel";
    typesMap["sln"] = "text/plain";
    typesMap["slupkg-ms"] = "application/x-ms-license";
    typesMap["smd"] = "audio/x-smd";
    typesMap["smi"] = "application/octet-stream";
    typesMap["smx"] = "audio/x-smd";
    typesMap["smz"] = "audio/x-smd";
    typesMap["snd"] = "audio/basic";
    typesMap["snippet"] = "application/xml";
    typesMap["snp"] = "application/octet-stream";
    typesMap["sol"] = "text/plain";
    typesMap["sor"] = "text/plain";
    typesMap["spc"] = "application/x-pkcs7-certificates";
    typesMap["spl"] = "application/futuresplash";
    typesMap["spx"] = "audio/ogg";
    typesMap["src"] = "application/x-wais-source";
    typesMap["srf"] = "text/plain";
    typesMap["ssisdeploymentmanifest"] = "text/xml";
    typesMap["ssm"] = "application/streamingmedia";
    typesMap["sst"] = "application/vnd.ms-pki.certstore";
    typesMap["stl"] = "application/vnd.ms-pki.stl";
    typesMap["sv4cpio"] = "application/x-sv4cpio";
    typesMap["sv4crc"] = "application/x-sv4crc";
    typesMap["svc"] = "application/xml";
    typesMap["svg"] = "image/svg+xml";
    typesMap["swf"] = "application/x-shockwave-flash";
    typesMap["t"] = "application/x-troff";
    typesMap["tar"] = "application/x-tar";
    typesMap["tcl"] = "application/x-tcl";
    typesMap["testrunconfig"] = "application/xml";
    typesMap["testsettings"] = "application/xml";
    typesMap["tex"] = "application/x-tex";
    typesMap["texi"] = "application/x-texinfo";
    typesMap["texinfo"] = "application/x-texinfo";
    typesMap["tgz"] = "application/x-compressed";
    typesMap["thmx"] = "application/vnd.ms-officetheme";
    typesMap["thn"] = "application/octet-stream";
    typesMap["tif"] = "image/tiff";
    typesMap["tiff"] = "image/tiff";
    typesMap["tlh"] = "text/plain";
    typesMap["tli"] = "text/plain";
    typesMap["toc"] = "application/octet-stream";
    typesMap["tr"] = "application/x-troff";
    typesMap["trm"] = "application/x-msterminal";
    typesMap["trx"] = "application/xml";
    typesMap["ts"] = "video/vnd.dlna.mpeg-tts";
    typesMap["tsv"] = "text/tab-separated-values";
    typesMap["ttf"] = "application/font-sfnt";
    typesMap["tts"] = "video/vnd.dlna.mpeg-tts";
    typesMap["txt"] = "text/plain";
    typesMap["u32"] = "application/octet-stream";
    typesMap["uls"] = "text/iuls";
    typesMap["user"] = "text/plain";
    typesMap["ustar"] = "application/x-ustar";
    typesMap["vb"] = "text/plain";
    typesMap["vbdproj"] = "text/plain";
    typesMap["vbk"] = "video/mpeg";
    typesMap["vbproj"] = "text/plain";
    typesMap["vbs"] = "text/vbscript";
    typesMap["vcf"] = "text/x-vcard";
    typesMap["vcproj"] = "application/xml";
    typesMap["vcs"] = "text/plain";
    typesMap["vcxproj"] = "application/xml";
    typesMap["vddproj"] = "text/plain";
    typesMap["vdp"] = "text/plain";
    typesMap["vdproj"] = "text/plain";
    typesMap["vdx"] = "application/vnd.ms-visio.viewer";
    typesMap["vml"] = "text/xml";
    typesMap["vscontent"] = "application/xml";
    typesMap["vsct"] = "text/xml";
    typesMap["vsd"] = "application/vnd.visio";
    typesMap["vsi"] = "application/ms-vsi";
    typesMap["vsix"] = "application/vsix";
    typesMap["vsixlangpack"] = "text/xml";
    typesMap["vsixmanifest"] = "text/xml";
    typesMap["vsmdi"] = "application/xml";
    typesMap["vspscc"] = "text/plain";
    typesMap["vss"] = "application/vnd.visio";
    typesMap["vsscc"] = "text/plain";
    typesMap["vssettings"] = "text/xml";
    typesMap["vssscc"] = "text/plain";
    typesMap["vst"] = "application/vnd.visio";
    typesMap["vstemplate"] = "text/xml";
    typesMap["vsto"] = "application/x-ms-vsto";
    typesMap["vsw"] = "application/vnd.visio";
    typesMap["vsx"] = "application/vnd.visio";
    typesMap["vtx"] = "application/vnd.visio";
    typesMap["wav"] = "audio/wav";
    typesMap["wave"] = "audio/wav";
    typesMap["wax"] = "audio/x-ms-wax";
    typesMap["wbk"] = "application/msword";
    typesMap["wbmp"] = "image/vnd.wap.wbmp";
    typesMap["wcm"] = "application/vnd.ms-works";
    typesMap["wdb"] = "application/vnd.ms-works";
    typesMap["wdp"] = "image/vnd.ms-photo";
    typesMap["webarchive"] = "application/x-safari-webarchive";
    typesMap["webm"] = "video/webm";
    typesMap["webp"] = "image/webp";
    typesMap["webtest"] = "application/xml";
    typesMap["wiq"] = "application/xml";
    typesMap["wiz"] = "application/msword";
    typesMap["wks"] = "application/vnd.ms-works";
    typesMap["wlmp"] = "application/wlmoviemaker";
    typesMap["wlpginstall"] = "application/x-wlpg-detect";
    typesMap["wlpginstall3"] = "application/x-wlpg3-detect";
    typesMap["wm"] = "video/x-ms-wm";
    typesMap["wma"] = "audio/x-ms-wma";
    typesMap["wmd"] = "application/x-ms-wmd";
    typesMap["wmf"] = "application/x-msmetafile";
    typesMap["wml"] = "text/vnd.wap.wml";
    typesMap["wmlc"] = "application/vnd.wap.wmlc";
    typesMap["wmls"] = "text/vnd.wap.wmlscript";
    typesMap["wmlsc"] = "application/vnd.wap.wmlscriptc";
    typesMap["wmp"] = "video/x-ms-wmp";
    typesMap["wmv"] = "video/x-ms-wmv";
    typesMap["wmx"] = "video/x-ms-wmx";
    typesMap["wmz"] = "application/x-ms-wmz";
    typesMap["woff"] = "application/font-woff";
    typesMap["wpl"] = "application/vnd.ms-wpl";
    typesMap["wps"] = "application/vnd.ms-works";
    typesMap["wri"] = "application/x-mswrite";
    typesMap["wrl"] = "x-world/x-vrml";
    typesMap["wrz"] = "x-world/x-vrml";
    typesMap["wsc"] = "text/scriptlet";
    typesMap["wsdl"] = "text/xml";
    typesMap["wvx"] = "video/x-ms-wvx";
    typesMap["x"] = "application/directx";
    typesMap["xaf"] = "x-world/x-vrml";
    typesMap["xaml"] = "application/xaml+xml";
    typesMap["xap"] = "application/x-silverlight-app";
    typesMap["xbap"] = "application/x-ms-xbap";
    typesMap["xbm"] = "image/x-xbitmap";
    typesMap["xdr"] = "text/plain";
    typesMap["xht"] = "application/xhtml+xml";
    typesMap["xhtml"] = "application/xhtml+xml";
    typesMap["xla"] = "application/vnd.ms-excel";
    typesMap["xlam"] = "application/vnd.ms-excel.addin.macroEnabled.12";
    typesMap["xlc"] = "application/vnd.ms-excel";
    typesMap["xld"] = "application/vnd.ms-excel";
    typesMap["xlk"] = "application/vnd.ms-excel";
    typesMap["xll"] = "application/vnd.ms-excel";
    typesMap["xlm"] = "application/vnd.ms-excel";
    typesMap["xls"] = "application/vnd.ms-excel";
    typesMap["xlsb"] = "application/vnd.ms-excel.sheet.binary.macroEnabled.12";
    typesMap["xlsm"] = "application/vnd.ms-excel.sheet.macroEnabled.12";
    typesMap["xlsx"] =
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
    typesMap["xlt"] = "application/vnd.ms-excel";
    typesMap["xltm"] = "application/vnd.ms-excel.template.macroEnabled.12";
    typesMap["xltx"] =
        "application/vnd.openxmlformats-officedocument.spreadsheetml.template";
    typesMap["xlw"] = "application/vnd.ms-excel";
    typesMap["xml"] = "text/xml";
    typesMap["xmta"] = "application/xml";
    typesMap["xof"] = "x-world/x-vrml";
    typesMap["xoml"] = "text/plain";
    typesMap["xpm"] = "image/x-xpixmap";
    typesMap["xps"] = "application/vnd.ms-xpsdocument";
    typesMap["xrm-ms"] = "text/xml";
    typesMap["xsc"] = "application/xml";
    typesMap["xsd"] = "text/xml";
    typesMap["xsf"] = "text/xml";
    typesMap["xsl"] = "text/xml";
    typesMap["xslt"] = "text/xml";
    typesMap["xsn"] = "application/octet-stream";
    typesMap["xss"] = "application/xml";
    typesMap["xspf"] = "application/xspf+xml";
    typesMap["xtp"] = "application/octet-stream";
    typesMap["xwd"] = "image/x-xwindowdump";
    typesMap["z"] = "application/x-compress";
    typesMap["zip"] = "application/zip";
    String? filenameExtension = getFilenameExtension(fileName);
    if (filenameExtension == null ||
        (!(typesMap.containsKey(filenameExtension)))) {
      return null;
    }
    return typesMap[filenameExtension];
  }

  static String? getFilenameExtension(String? fileName) {
    if (fileName == null) {
      return null;
    }
    int indexOf = fileName.lastIndexOf(".");
    if (indexOf == -1) {
      return null;
    }
    return fileName.substring(indexOf + 1);
  }
}
